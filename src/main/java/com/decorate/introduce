Java装饰模式
装饰器模式允许用户向现有对象添加新功能而不改变其结构。 这种类型的设计模式属于结构模式，因为此模式充当现有类的包装器。

此模式创建一个装饰器类，它包装原始类并提供附加功能，保持类方法签名完整。

我们通过以下示例展示装饰器模式的使用，其中我们将用一些颜色装饰形状而不改变形状类。

实例
在这个实例中，将创建一个Shape接口和实现Shape接口的具体类。然后再创建一个抽象装饰器类-ShapeDecorator，实现Shape接口并使用Shape对象作为其实例变量。

这里的RedShapeDecorator是实现ShapeDecorator的具体类。

DecoratorPatternDemo这是一个演示类，将使用RedShapeDecorator来装饰Shape对象。装饰模式示例的结构如下所示


第1步
创建一个简单的接口。 
	Shape.java
	
第2步
创建两个实现相同接口的具体类。 
	Rectangle.java
	Circle.java
	
第3步
创建实现Shape接口的抽象装饰器类。
	ShapeDecorator.java
	
第4步
创建扩展ShapeDecorator类的具体装饰器类。 
	RedShapeDecorator.java
	
第5步
使用RedShapeDecorator装饰Shape对象。
	DecoratorPatternDemo.java